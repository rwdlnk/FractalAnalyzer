[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "fractal-analyzer"
dynamic = ["version"]
description = "Advanced fractal dimension analysis for fluid interfaces and mathematical fractals"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Rod Douglass", email = "rwdlanm@gmail.com"},
]
maintainers = [
    {name = "Rod Douglass", email = "rwdlanm@gmail.com"},
]
keywords = [
    "fractal", "dimension", "box-counting", "rayleigh-taylor", 
    "mixing", "cfd", "interface", "multifractal", "physics", "simulation"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "matplotlib>=3.3.0",
    "pandas>=1.3.0",
    "scikit-image>=0.18.0",
    "numba>=0.56.0",
    "argparse",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.900",
    "isort>=5.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.15",
    "nbsphinx>=0.8",
]
jupyter = [
    "jupyter>=1.0",
    "notebook>=6.0",
    "ipywidgets>=7.6",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "pytest-xdist>=2.0",
]
all = [
    "fractal-analyzer[dev,docs,jupyter,test]"
]

[project.urls]
Homepage = "https://github.com/yourusername/Fractal_Analyzer"
Documentation = "https://github.com/yourusername/Fractal_Analyzer/wiki"
Repository = "https://github.com/yourusername/Fractal_Analyzer"
"Bug Tracker" = "https://github.com/yourusername/Fractal_Analyzer/issues"
Changelog = "https://github.com/yourusername/Fractal_Analyzer/blob/main/CHANGELOG.md"

[project.scripts]
fractal-analyze = "fractal_analyzer.core.fractal_analyzer:main"
rt-analyze = "scripts.analyze_temporal_improved:main"
rt-convergence = "scripts.basic_resolution_convergence:main"

[tool.setuptools]
package-dir = {"" = "."}
include-package-data = true

[tool.setuptools.packages.find]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
fractal_analyzer = [
    "examples/data/*.txt",
    "examples/data/*.vtk",
    "tests/test_data/*.txt",
    "tests/test_data/*.vtk",
]

[tool.setuptools_scm]
write_to = "fractal_analyzer/_version.py"
version_scheme = "post-release"
local_scheme = "dirty-tag"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration  
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["fractal_analyzer"]
known_third_party = ["numpy", "scipy", "matplotlib", "pandas", "skimage", "numba"]

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=fractal_analyzer",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "numpy.*",
    "scipy.*", 
    "matplotlib.*",
    "pandas.*",
    "skimage.*",
    "numba.*",
]
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["fractal_analyzer"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "fractal_analyzer/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
